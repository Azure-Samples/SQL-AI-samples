inputs:
  question:
    type: string
    default: What feeds all the fixtures in low voltage tracks instead of each light having a line-to-low voltage transformer?
    is_chat_input: false
  context:
    type: string
    default: Track lighting, invented by Lightolier, was popular at one period of time because it was much easier to install than recessed lighting, and individual fixtures are decorative and can be easily aimed at a wall. It has regained some popularity recently in low-voltage tracks, which often look nothing like their predecessors because they do not have the safety issues that line-voltage systems have, and are therefore less bulky and more ornamental in themselves. A master transformer feeds all of the fixtures on the track or rod with 12 or 24 volts, instead of each light fixture having its own line-to-low voltage transformer. There are traditional spots and floods, as well as other small hanging fixtures. A modified version of this is cable lighting, where lights are hung from or clipped to bare metal cables under tension
    is_chat_input: false
  answer:
    type: string
    default: The main transformer is the object that feeds all the fixtures in low voltage tracks.
    is_chat_input: false
outputs:
  gpt_groundedness:
    type: object
    reference: ${concat_scores.output.gpt_groundedness}
    evaluation_only: false
    is_chat_output: false
nodes:
- name: groundedness_score
  type: llm
  source:
    type: code
    path: groundedness_score.jinja2
  inputs:
    question: ${inputs.question}
    context: ${inputs.context}
    answer: ${inputs.answer}
    max_tokens: 256
    deployment_name: mp-aoi-gpt-4-32k
    temperature: 0.0
    model: gpt-4
  api: chat
  provider: AzureOpenAI
  connection: DRI-Copilot-SQL-OAI
  module: promptflow.tools.aoai
  aggregation: false
- name: concat_scores
  type: python
  source:
    type: code
    path: concat_scores.py
  inputs:
    groundesness_score: ${groundedness_score.output}
  aggregation: false
- name: aggregate_variants_results
  type: python
  source:
    type: code
    path: aggregate_variants_results.py
  inputs:
    results: ${concat_scores.output}
  aggregation: true
environment:
  python_requirements_txt: requirements.txt
